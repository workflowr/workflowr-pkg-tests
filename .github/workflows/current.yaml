name: current
on:
  schedule:
    - cron: "0 09 * * 1"
  workflow_dispatch:
jobs:
  current:
    runs-on: ubuntu-20.04
    name: current
    env:
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: "workflowr/workflowr"
      - name: Install system dependencies
        run: |
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:cran/libgit2
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libgit2-dev \
            libpng-dev \
            libsm6 \
            libssl-dev \
            libxml2-dev \
            libxt6 \
            netbase \
            python3 \
            python3-matplotlib \
            qpdf \
            zlib1g-dev
      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: "2.11.4"
      - uses: r-lib/actions/setup-r@v1
        id: install-r
        with:
          r-version: "release"
      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}/*
          key: ubuntu-20.04-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('DESCRIPTION') }}
          restore-keys: ubuntu-20.04-${{ steps.install-r.outputs.installed-r-version }}-1-
      - name: Install dependencies
        run: |
          print(getOption("repos"))
          if (!requireNamespace("remotes", quietly = TRUE)) {
            install.packages("remotes")
          }
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: |
          R CMD build .
          R CMD check --as-cran --no-examples --no-manual *tar.gz
      - name: Show testthat output
        if: always()
        run: find workflowr.Rcheck -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: current-results
          path: workflowr.Rcheck
