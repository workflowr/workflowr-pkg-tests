name: pandocless
on:
  schedule: # quarterly
    - cron: "0 09 1 */3 *"
  workflow_dispatch:
jobs:
  pandocless:
    runs-on: ubuntu-22.04
    name: pandocless
    env:
      # This job is designed to simulate a CRAN environment with no pandoc installed
      NOT_CRAN: FALSE
      _R_CHECK_CRAN_INCOMING_: TRUE
      _R_CHECK_CRAN_INCOMING_REMOTE_: FALSE
    steps:
      - uses: actions/checkout@v4
        with:
          repository: "workflowr/workflowr"
      - name: Setup r2u
        uses: eddelbuettel/github-actions/r2u-setup@master
        with:
          bspm-version-check: "FALSE"
      - name: Install dependencies
        run: |
          apt-get install --yes \
            r-cran-callr \
            r-cran-fs \
            r-cran-getpass \
            r-cran-git2r \
            r-cran-glue \
            r-cran-httpuv \
            r-cran-httr \
            r-cran-knitr \
            r-cran-rmarkdown \
            r-cran-rprojroot \
            r-cran-rstudioapi \
            r-cran-stringr \
            r-cran-whisker \
            r-cran-xfun \
            r-cran-yaml \
            r-cran-clipr \
            r-cran-miniui \
            r-cran-reticulate \
            r-cran-sessioninfo \
            r-cran-shiny \
            r-cran-testthat \
            r-cran-withr
          dpkg-query --list r-*
        shell: sudo bash {0}
      # r-cran-rmarkdown now depends on pandoc. In general I think this is a
      # good practice for a package manager (we also add pandoc to the run
      # requirements of the r-rmarkdown conda-forge package for the same
      # reason). But in order to confirm `R CMD check` can run without pandoc, I
      # need to remove it.
      - name: Install {rmarkdown} without pandoc
        run: |
          apt-get remove --yes pandoc || true
          apt-get install --yes r-cran-remotes
          Rscript -e 'remotes::install_github("rstudio/rmarkdown@*release", dependencies = FALSE)'
        shell: sudo bash {0}
      - name: Session information
        run: sessionInfo()
        shell: Rscript {0}
      - name: Confirm pandocless
        run: |
           if (rmarkdown::pandoc_available())
             stop("pandoc is available")
        shell: Rscript {0}
      - name: Build
        run: R CMD build --no-build-vignettes --no-manual .
      - name: Check
        run: R CMD check --ignore-vignettes --no-manual --as-cran workflowr_*.tar.gz
      - name: Test results
        if: always()
        run: cat workflowr.Rcheck/tests/testthat.Rout*
