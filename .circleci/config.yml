version: 2
jobs:
  future:
    docker:
      - image: rocker/r-ver:devel
    environment:
      NOT_CRAN: true
      PANDOC: 2.9.2.1
      R_LIBS: ~/R/Library
    steps:
      - restore_cache:
          keys:
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install pandoc
          command: bash scripts/install-pandoc.sh $PANDOC
      - run:
          name: Install package dependencies from GitHub
          command: |
            mkdir -p ~/R/Library
            Rscript -e 'install.packages("remotes")'
            Rscript -e 'remotes::install_github("r-lib/callr")'
            Rscript -e 'remotes::install_github("mdlincoln/clipr")'
            Rscript -e 'remotes::install_github("r-lib/covr")'
            Rscript -e 'remotes::install_github("r-lib/devtools")'
            Rscript -e 'remotes::install_github("r-lib/fs")'
            Rscript -e 'remotes::install_github("wrathematics/getPass")'
            Rscript -e 'remotes::install_github("ropensci/git2r")'
            Rscript -e 'remotes::install_github("tidyverse/glue")'
            Rscript -e 'remotes::install_github("r-lib/httr")'
            Rscript -e 'remotes::install_github("yihui/knitr")'
            Rscript -e 'remotes::install_github("rstudio/miniUI")'
            Rscript -e 'remotes::install_github("rstudio/reticulate")'
            Rscript -e 'remotes::install_github("rstudio/rmarkdown")'
            Rscript -e 'remotes::install_github("krlmlr/rprojroot")'
            Rscript -e 'remotes::install_github("rstudio/rstudioapi")'
            Rscript -e 'remotes::install_github("rstudio/shiny")'
            Rscript -e 'remotes::install_github("ropensci/spelling")'
            Rscript -e 'remotes::install_github("tidyverse/stringr")'
            Rscript -e 'remotes::install_github("r-lib/testthat")'
            Rscript -e 'remotes::install_github("edwindj/whisker")'
            Rscript -e 'remotes::install_github("r-lib/withr")'
            Rscript -e 'remotes::install_github("viking/r-yaml")'
      - run:
          name: Clone and install workflowr
          command: |
            git clone https://github.com/jdblischak/workflowr.git ../workflowr
            R CMD build --no-build-vignettes --no-manual ../workflowr
            R CMD INSTALL workflowr_*tar.gz
      - run:
          name: Session information and installed package versions
          command: |
            Rscript -e 'library(workflowr); devtools::session_info()'
            Rscript -e 'installed.packages()[, c("Package", "Version")]'
            Rscript -e 'rmarkdown::pandoc_version()'
      - run:
          name: Build and check package
          command: |
            cd ../workflowr
            bash scripts/build.sh --no-manual
          no_output_timeout: 20m
      - store_artifacts:
          path: ../workflowr/workflowr.Rcheck/
      - save_cache:
          key: r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
          paths:
            - "~/R/Library"
  devel:
    docker:
      - image: rocker/r-ver:devel
    environment:
      NOT_CRAN: true
      PANDOC: 2.7
      R_LIBS: ~/R/Library
    steps:
      - restore_cache:
          keys:
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install pandoc
          command: bash scripts/install-pandoc.sh $PANDOC
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git /tmp/workflowr
      - run:
          name: Install package dependencies
          command: |
            mkdir -p ~/R/Library
            Rscript scripts/install-r-pkgs.R
      - run:
          name: Session information and installed package versions
          command: Rscript scripts/session-info.R
      - run:
          name: Build and check
          command: bash scripts/check.sh
          no_output_timeout: 20m
      - store_artifacts:
          path: /tmp/workflowr/workflowr.Rcheck/
      - save_cache:
          key: r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
          paths:
            - "~/R/Library"
  r363:
    docker:
      - image: rocker/r-ver:3.6.3
    environment:
      NOT_CRAN: true
      PANDOC: 2.7
      R_LIBS: ~/R/Library
    steps:
      - restore_cache:
          keys:
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install pandoc
          command: bash scripts/install-pandoc.sh $PANDOC
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git /tmp/workflowr
      - run:
          name: Install package dependencies
          command: |
            mkdir -p ~/R/Library
            Rscript scripts/install-r-pkgs.R
      - run:
          name: Session information and installed package versions
          command: Rscript scripts/session-info.R
      - run:
          name: Build and check
          command: bash scripts/check.sh
          no_output_timeout: 20m
      - store_artifacts:
          path: /tmp/workflowr/workflowr.Rcheck/
      - save_cache:
          key: r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
          paths:
            - "~/R/Library"
  r353:
    docker:
      - image: rocker/r-ver:3.5.3
    environment:
      NOT_CRAN: true
      PANDOC: 2.7
      R_LIBS: ~/R/Library
    steps:
      - restore_cache:
          keys:
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install pandoc
          command: bash scripts/install-pandoc.sh $PANDOC
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git /tmp/workflowr
      - run:
          name: Install package dependencies
          command: |
            mkdir -p ~/R/Library
            Rscript scripts/install-r-pkgs.R
      - run:
          name: Install package dependencies (version in old MRAN snapshot is too outdated)
          command: Rscript -e 'install.packages(c("clipr", "git2r", "rappdirs", "reticulate"), repos = "https://cran.rstudio.com/", dependencies = FALSE)'
      - run:
          name: Session information and installed package versions
          command: Rscript scripts/session-info.R
      - run:
          name: Build and check
          command: bash scripts/check.sh
          no_output_timeout: 20m
      - store_artifacts:
          path: /tmp/workflowr/workflowr.Rcheck/
      - save_cache:
          key: r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
          paths:
            - "~/R/Library"
  r330:
    docker:
      - image: rocker/r-ver:3.3.0
    environment:
      NOT_CRAN: true
      PANDOC: 2.7
      R_LIBS: ~/R/Library
    steps:
      - restore_cache:
          keys:
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install pandoc
          command: bash scripts/install-pandoc.sh $PANDOC
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git /tmp/workflowr
      - run:
          name: Install package dependencies (not in old MRAN snapshot)
          command: |
            mkdir -p ~/R/Library
            # Rcpp installation hacks. The latest Rcpp doesn't compile. The MRAN
            # version is too outdated for hunspell, a dependency of spelling.
            # hunspell requires a minimum of 0.12.12, so using that for now.
            Rscript -e 'install.packages("remotes", repos = "https://cran.rstudio.com/")'
            Rscript -e 'remotes::install_version("Rcpp", "0.12.12", repos = "https://cran.rstudio.com/")'
            # Recent versions of digest requires R >= 3.3.0. Install older
            # version available in MRAN snapshot.
            Rscript -e 'install.packages("digest")'

            Rscript -e 'install.packages(c("callr", "fs", "glue", "reticulate"), repos = "https://cran.rstudio.com/")'

            # Install spelling 2.1 to avoid error from tools::loadPkgRdMacros()
            # that is called in spelling 2.2.
            Rscript -e 'remotes::install_version("spelling", "2.1", repos = "https://cran.rstudio.com/")'
            # rlang and vctrs dropped support for R 3.2 and don't exist in the
            # MRAN snapshot from 2016, so have to install older version.
            Rscript -e 'remotes::install_version("rlang", "0.4.8", repos = "https://cran.rstudio.com/")'
            Rscript -e 'remotes::install_version("vctrs", "0.3.4", repos = "https://cran.rstudio.com/")'
      - run:
          name: Install package dependencies
          command: |
            mkdir -p ~/R/Library
            Rscript scripts/install-r-pkgs.R
      - run:
          name: Install package dependencies (version in old MRAN snapshot is too outdated)
          # Have to also install dependencies since the MRAN versions are so old
          # that many of the packages added new dependencies.
          command: |
            Rscript -e 'install.packages(c("clipr", "git2r", "rprojroot", "rstudioapi", "shiny", "stringr", "testthat", "withr"), repos = "https://cran.rstudio.com/")'
      - run:
          name: Install rmarkdown 1.7 and knitr 1.18
          command: |
            Rscript -e 'install.packages(c("base64enc", "caTools"))'
            Rscript -e 'remotes::install_version("rmarkdown", "1.7", repos = "https://cran.rstudio.com/", dependencies = FALSE)'
            Rscript -e 'remotes::install_version("knitr", "1.18", repos = "https://cran.rstudio.com/", dependencies = FALSE)'
      - run:
          name: Session information and installed package versions
          command: Rscript scripts/session-info.R
      - run:
          name: Build and check
          command: bash scripts/check.sh
          no_output_timeout: 20m
      - store_artifacts:
          path: /tmp/workflowr/workflowr.Rcheck/
      - save_cache:
          key: r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
          paths:
            - "~/R/Library"
  pandoc_one:
    docker:
      - image: rocker/r-base:latest
    environment:
      NOT_CRAN: true
      PANDOC: 1.19
      R_LIBS: ~/R/Library
    steps:
      - restore_cache:
          keys:
            - r-pkg-cache-v7-latest-{{ arch }}-{{ .Branch }}
            - r-pkg-cache-v7-latest-{{ arch }}-
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install pandoc
          command: bash scripts/install-pandoc.sh $PANDOC
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git /tmp/workflowr
      - run:
          name: Install package dependencies
          command: |
            mkdir -p ~/R/Library
            Rscript -e 'install.packages("stringi")'
            Rscript scripts/install-r-pkgs.R
      - run:
          name: Session information and installed package versions
          command: Rscript scripts/session-info.R
      - run:
          name: Build and check
          command: bash scripts/check.sh
          no_output_timeout: 20m
      - store_artifacts:
          path: /tmp/workflowr/workflowr.Rcheck/
      - save_cache:
          key: r-pkg-cache-v7-latest-{{ arch }}-{{ .Branch }}
          paths:
            - "~/R/Library"
  rmd_1.7:
    docker:
      - image: rocker/r-base:latest
    environment:
      NOT_CRAN: true
      PANDOC: 2.7
      R_LIBS: ~/R/Library
    steps:
      - restore_cache:
          keys:
            - r-pkg-cache-v7-latest-{{ arch }}-{{ .Branch }}
            - r-pkg-cache-v7-latest-{{ arch }}-
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install pandoc
          command: bash scripts/install-pandoc.sh $PANDOC
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git /tmp/workflowr
      - run:
          name: Install package dependencies
          command: |
            mkdir -p ~/R/Library
            Rscript -e 'install.packages("stringi")'
            Rscript scripts/install-r-pkgs.R
      - run:
          name: Install knitr 1.18 and rmarkdown 1.7
          # For some reason install_version() was failing with https://cloud.r-project.org
          # but it works with https://cran.r-project.org
          command: |
            Rscript -e 'remotes::install_version("knitr", "1.18", upgrade = FALSE, repos = "https://cran.r-project.org")'
            Rscript -e 'remotes::install_version("rmarkdown", "1.7", upgrade = FALSE, repos = "https://cran.r-project.org")'
      - run:
          name: Session information and installed package versions
          command: Rscript scripts/session-info.R
      - run:
          name: Build and check
          command: bash scripts/check.sh
          no_output_timeout: 20m
      - store_artifacts:
          path: /tmp/workflowr/workflowr.Rcheck/
      - save_cache:
          key: r-pkg-cache-v7-latest-{{ arch }}-{{ .Branch }}
          paths:
            - "~/R/Library"
  rmd_1.10:
    docker:
      - image: rocker/r-base:latest
    environment:
      NOT_CRAN: true
      PANDOC: 2.7
      R_LIBS: ~/R/Library
    steps:
      - restore_cache:
          keys:
            - r-pkg-cache-v7-latest-{{ arch }}-{{ .Branch }}
            - r-pkg-cache-v7-latest-{{ arch }}-
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install pandoc
          command: bash scripts/install-pandoc.sh $PANDOC
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git /tmp/workflowr
      - run:
          name: Install package dependencies
          command: |
            mkdir -p ~/R/Library
            Rscript -e 'install.packages("stringi")'
            Rscript scripts/install-r-pkgs.R
      - run:
          name: Install rmarkdown 1.10
          command: |
            Rscript -e 'remotes::install_version("rmarkdown", "1.10", upgrade = FALSE, repos = "https://cran.r-project.org")'
      - run:
          name: Session information and installed package versions
          command: Rscript scripts/session-info.R
      - run:
          name: Build and check
          command: bash scripts/check.sh
          no_output_timeout: 20m
      - store_artifacts:
          path: /tmp/workflowr/workflowr.Rcheck/
      - save_cache:
          key: r-pkg-cache-v7-latest-{{ arch }}-{{ .Branch }}
          paths:
            - "~/R/Library"
  callr_3.3.0:
    docker:
      - image: continuumio/miniconda3:4.7.10
    environment:
      NOT_CRAN: true
    steps:
      - checkout
      - run:
          name: Unset CircleCI's forced conversion of HTTPS->SSH
          command: git config --global --unset "url.ssh://git@github.com.insteadof"
      - run:
          name: Configure conda
          command: |
            conda config --set always_yes yes
            conda config --set quiet yes
            conda config --set changeps1 no
            conda config --set auto_update_conda no
            conda config --add channels defaults
            conda config --add channels conda-forge
      - run:
          name: Install
          command: |
            conda update --all
            conda config --env --add pinned_packages conda-forge::r-callr=3.3.0
            conda install qpdf \
                          r-base \
                          r-callr==3.3.0 \
                          r-clipr \
                          r-covr \
                          r-devtools \
                          r-miniui \
                          r-recommended \
                          r-reticulate \
                          r-shiny \
                          r-spelling \
                          r-testthat \
                          r-withr \
                          r-workflowr
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git ../workflowr
      - run:
          name: Session information and installed package versions
          command: |
            Rscript -e 'devtools::session_info()'
            conda list
      - run:
          name: Build and check package
          command: |
            cd ../workflowr
            bash scripts/build.sh --no-manual
          no_output_timeout: 20m
      - store_artifacts:
          path: ../workflowr/workflowr.Rcheck/
  reticulate:
    docker:
      - image: continuumio/miniconda3:4.7.10
    environment:
      NOT_CRAN: true
      R_LIBS: ~/R/Library
    steps:
      - checkout
      - run:
          name: Unset CircleCI's forced conversion of HTTPS->SSH
          command: git config --global --unset "url.ssh://git@github.com.insteadof"
      - run:
          name: Configure conda
          command: |
            conda config --set always_yes yes
            conda config --set quiet yes
            conda config --set changeps1 no
            conda config --set auto_update_conda no
            conda config --add channels defaults
            conda config --add channels conda-forge
      - run:
          name: Install
          command: |
            conda update --all
            conda install matplotlib \
                          qpdf \
                          r-base \
                          r-clipr \
                          r-covr \
                          r-devtools \
                          r-miniui \
                          r-recommended \
                          r-reticulate \
                          r-shiny \
                          r-spelling \
                          r-testthat \
                          r-withr \
                          r-workflowr \
                          xorg-libsm \
                          xorg-libxt
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git ../workflowr
      - run:
          name: Build and install workflowr
          command: |
            mkdir -p ~/R/Library
            R CMD build --no-build-vignettes --no-manual ../workflowr
            R CMD INSTALL workflowr_*tar.gz
      - run:
          name: Session information and installed package versions
          command: |
            Rscript -e 'library(workflowr); devtools::session_info()'
            conda list
      - run:
          name: Test wflow_html() with reticulate >= 1.15
          command: Rscript -e 'devtools::test(pkg = "../workflowr", filter = "html$")'
      - run:
          name: Install reticulate 1.14
          command: conda install r-reticulate==1.14
      - run:
          name: Test wflow_html() with reticulate == 1.14
          command: Rscript -e 'devtools::test(pkg = "../workflowr", filter = "html$")'
  speed:
    docker:
      - image: rocker/r-base:latest
    environment:
      PANDOC: 2.7
      R_LIBS: ~/R/Library
    steps:
      - restore_cache:
          keys:
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
            - r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install pandoc
          command: bash scripts/install-pandoc.sh $PANDOC
      - run:
          name: Clone workflowr
          command: git clone https://github.com/jdblischak/workflowr.git /tmp/workflowr/
      - run:
          name: Install package dependencies
          command: |
            mkdir -p ~/R/Library
            Rscript -e 'install.packages("stringi")'
            Rscript scripts/install-r-pkgs.R
      - run:
          name: Install bench package
          command: Rscript -e 'install.packages("bench")'
      - run:
          name: Install workflowr 1.4.0
          command: Rscript -e 'remotes::install_version("workflowr", "1.4.0")'
      - run:
          name: Record speed of workflowr 1.4.0
          command: Rscript scripts/speed-test.R
      - run:
          name: Install workflowr from CRAN
          command: Rscript -e 'install.packages("workflowr")'
      - run:
          name: Record speed of workflowr from CRAN
          command: Rscript scripts/speed-test.R
      - run:
          name: Install workflowr dev
          command: R CMD INSTALL --build /tmp/workflowr/
      - run:
          name: Record speed of workflowr dev
          command: Rscript scripts/speed-test.R
      - run:
          name: Clone git2r
          command: git clone https://github.com/ropensci/git2r.git /tmp/git2r/
      - run:
          name: Install git2r dev
          command: R CMD INSTALL --build /tmp/git2r/
      - run:
          name: Record speed of workflowr dev with git2r dev
          command: Rscript scripts/speed-test.R
      - save_cache:
          key: r-pkg-cache-v7-{{ .Environment.CIRCLE_JOB }}-{{ arch }}-{{ .Branch }}
          paths:
            - "~/R/Library"
  git_time:
    docker:
      - image: rocker/r-base:latest
    environment:
      R_LIBS: ~/R/Library
    steps:
      - checkout
      - run:
          name: Install system dependencies
          command: bash scripts/install-system.sh
      - run:
          name: Install R packages
          command: |
            mkdir -p ~/R/Library
            Rscript -e 'install.packages(c("fs", "remotes"))'
            Rscript -e 'remotes::install_github("ropensci/git2r")'
      - run:
          name: Configure R setup
          command: |
            echo TZ=America/New_York >> ~/.Renviron # set time zone
            echo 'options(warn=2)' >> ~/.Rprofile # Treat warnings as errors
      - run:
          name: Record time and timezone
          command: Rscript -e 'Sys.time(); Sys.timezone()'
      - run:
          name: Test conversion of git_time to date
          command: Rscript scripts/test-git-time.R

workflows:
  version: 2
  commit:
    jobs:
      - speed
      - git_time
      - future
#  hourly:
#    triggers:
#      - schedule:
#          # "At minute 0"
#          # https://crontab.guru/#0_*_*_*_*
#          cron: "0 * * * *"
#          filters:
#            branches:
#              only:
#                - master
#    jobs:
#      - git_time
  weekly:
    triggers:
      - schedule:
          # "At 09:00 on Monday."
          # https://crontab.guru/#0_09_*_*_1
          cron: "0 09 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - future
      - devel
      - r363
      - r353
      - r330
      - pandoc_one
      - rmd_1.7
      - rmd_1.10
      - callr_3.3.0
      - reticulate
      - speed
      - git_time
